## Folders

server
  │   server.js       <-- App entry point
  └───api             <-- Express route controllers for all the endpoints of the app
  └───config          <-- Environment variables and configuration related stuff
  └───models          <-- Database models
  └───Middlewares     <-- Middlewares	
  └───services        <-- All the business logic is here


## Architecture

DB <-- contollers <-- services <-- routes

DB - Database, mongoDB. Save all data
Controllers - API to db (save user, 

## Dependencies
- Express    # Web Framework 
- Socket.IO  # JS library to real-time data exchange
- Mongoose   # JS library to working with mongodb

## Dev Dependencies
- nodemon    # Relaod on save packaged


## Rest API errors
invalid_error        # Какая-то ошибка
empty_params_error   # Не передан обязательный параметр
no_found_error       # Не найдено / не существует    

## DB Errors
required_error       # Это поле обязательно, но значение не поступило
length_error         # Неверная длина поля
phone_format_number  # Неверно отформатирован номер телефона (не начинаеться с 7/8, неправильная длина)
unique_error         # Поле является уникальным, но было передано неуникальное значение
email_format_error   # Ошибка форматирования email

## Services Errors
invalid_error        # Какая-то ошибка
removed_user_is_null # Пользователь, которого удалилии был null wtf

## User model

- name: String, required
- surname: String, required
- phone: Number
- email: String, required, unique
- password: String, required
- sex: bool, required   # true - male, false - female
- city: String
- country: String
- consultations: List of Consultation, required
- reviews: List of Review, required
- notificationEmail: String, unique, required
- sendNotificationToEmail: bool, required
- sendMailingsToEmail: bool, required
- createdAt: Date, required
- lastActiveAt: Date, required

 

